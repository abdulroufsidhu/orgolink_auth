version: '3.8'

services:
  postgres-dev:
    image: postgres:15-alpine
    container_name: orgolink-auth-postgres-dev
    environment:
      POSTGRES_DB: orgolink_auth
      POSTGRES_USER: orgolink
      POSTGRES_PASSWORD: orgolink123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - orgolink-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orgolink -d orgolink_auth"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis-dev:
    image: redis:7-alpine
    container_name: orgolink-auth-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - orgolink-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: pgAdmin for database management in development
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: orgolink-auth-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@orgolink.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres-dev
    networks:
      - orgolink-dev-network
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  orgolink-dev-network:
    driver: bridge
